# Example configuration file for YATSM line runner
#
# This configuration includes details about the dataset and how YATSM should
# run

# Version of config
version: "0.6.0"

dataset:
    # Text file containing dates and images
    input_file: "$INPUT"
    #input_file: "/projectnb/landsat/projects/Colombia/images/005058/558_input_old_recent.csv" 
    # Input date format
    date_format: "%Y%j"
    # Output location
    output: "$RESULTS" #"/projectnb/landsat/projects/Colombia/images/005058/Results/M3/TSR"
    # Output file prefix (e.g., [prefix]_[line].npz)
    output_prefix: "yatsm_r"
    # Total number of bands
    n_bands: 8
    # Mask band (e.g., Fmask)
    mask_band: 8
    # List of integer values to mask within the mask band
    mask_values: [2, 3, 4, 255]
    # Valid range of band data
    # specify 1 range for all bands, or specify ranges for each band
    min_values: 0
    max_values: 10000
    # Indices for multi-temporal cloud masking (indexed on 1)
    green_band: 2
    swir1_band: 5
    # Use BIP image reader? If not, use GDAL to read in
    use_bip_reader: False
    # Directory location for caching dataset lines
    cache_line_dir: "$IMG/.cache" #"/projectnb/landsat/projects/Colombia/images/005058/images/.cache"

# Parameters common to all timeseries analysis models within YATSM package
YATSM:
    algorithm: "CCDCesque"
    prediction: glmnet_Lasso20
    design_matrix: "1 + x + harm(x, 1)"
    reverse: False
    commission_alpha: 0.1
    # Re-fit each segment, adding new coefficients & RMSE info to record
    refit:
        prefix: [robust]
        prediction: [rlm_maxiter10]
        stay_regularized: [True]

# Parameters for CCDCesque algorithm -- referenced by "algorithm" key in YATSM
CCDCesque:
    init:  # hyperparameters
        consecutive: 5
        threshold: 3.7
        min_obs: 9
        min_rmse: 170
        test_indices: [2, 3, 4, 5]
        retrain_time: 365.25
        screening: RLM
        screening_crit: 380.0
        slope_test: True
        remove_noise: True
        dynamic_rmse: False

# Regression estimators
LassoCV:
    pickle: "/projectnb/landsat/users/parevalo/yatsm/yatsm/regression/pickles/sklearn_LassoCV_n50.pkl"
    fit:  # optional arguments to the ``fit`` method of the predictor

Lasso20:
    pickle: "/projectnb/landsat/users/parevalo/yatsm/yatsm/regression/pickles/sklearn_Lasso20.pkl"

OLS:
    pickle: "/projectnb/landsat/users/parevalo/yatsm/yatsm/regression/pickles/OLS.pkl"

GLMNET_LassoCV:
    pickle: "/projectnb/landsat/users/parevalo/yatsm/yatsm/regression/pickles/glmnet_LassoCV_n50.pkl"

glmnet_Lasso20:
    #pickle: "/projectnb/landsat/users/parevalo/yatsm/yatsm/regression/pickles/glmnet_Lasso20.pkl"
    fit:
        penalties: [1, 0, 1, 1]

RLM:
    pickle: "/projectnb/landsat/users/parevalo/yatsm/yatsm/regression/pickles/rlm_maxiter10.pkl"

# Section for phenology fitting
phenology:
    enable: False
    init:
        # Specification for dataset indices required for EVI based phenology monitoring
        red_index: 2
        nir_index: 3
        blue_index: 0
        # Scale factor for reflectance bands
        scale: 0.0001
        # You can also specify index of EVI if contained in dataset to override calculation
        evi_index:
        evi_scale:
        # Number of years to group together when normalizing EVI to upper and lower percentiles
        year_interval: 3
        # Upper and lower percentiles of EVI used for max/min scaling
        q_min: 10
        q_max: 90

# Section for segmentation
segment:
    # Segmentation image
    segmentation:
    # Resegmentation threshold (0 turns off resegmentation)
    resegment_crit: 0
    # Resegmentation size thresholds
    resegment_minpix: 5
    resegment_maxpix: 50

# Section for training and classification
classification:
    # Training data file
    training_image: "/projectnb/landsat/projects/Colombia/images/007059/images/Training1.tif" 
    # Training data masked values
    roi_mask_values: [0, 255]
    # Date range
    training_start: "2001-03-03"
    training_end: "2001-01-04"
    training_date_format: "%Y-%m-%d"
    # Cache X feature input and y labels for training data image into file?
    cache_training: "/projectnb/landsat/projects/Colombia/images/007059/images/.traincache" 
